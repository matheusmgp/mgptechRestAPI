// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mgptechRestAPI.Infra.Data;

namespace mgptechRestAPI.Infra.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20210301235339_columns rename7")]
    partial class columnsrename7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Observacao")
                        .HasColumnType("text")
                        .HasColumnName("observacao");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Ambiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("razao_social");

                    b.HasKey("Id");

                    b.ToTable("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.CanalComunicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("CanalComunicacao");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Chamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_abertura");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_fechamento");

                    b.Property<int>("FilialId")
                        .HasColumnType("int")
                        .HasColumnName("filial_id");

                    b.Property<string>("Protocolo")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("protocolo");

                    b.Property<int>("SetorId")
                        .HasColumnType("int")
                        .HasColumnName("setor_id");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.Property<int?>("UserFinishId")
                        .HasColumnType("int")
                        .HasColumnName("user_finish_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int?>("UserRedirectId")
                        .HasColumnType("int")
                        .HasColumnName("user_redirect_id");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("UserFinishId");

                    b.ToTable("Chamado");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cnpj");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome_fantasia");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("razao_social");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Pendencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<int>("CanalComunicacaoId")
                        .HasColumnType("int")
                        .HasColumnName("canal_id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<int>("ChamadoId")
                        .HasColumnType("int")
                        .HasColumnName("chamado_id");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_abertura");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_fechamento");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("imagem");

                    b.Property<string>("PendenciaImagem")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pendencia_imagem");

                    b.Property<string>("Solucao")
                        .HasColumnType("text")
                        .HasColumnName("solucao");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.Property<int>("SubCategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("subCategoria_id");

                    b.Property<int?>("UserFinishId")
                        .HasColumnType("int")
                        .HasColumnName("user_finish_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("ChamadoId");

                    b.HasIndex("UserFinishId");

                    b.ToTable("Pendencia");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Procedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(300)")
                        .HasColumnName("descricao");

                    b.Property<string>("DescricaoValue")
                        .HasColumnType("varchar(300)")
                        .HasColumnName("descricao_value");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Procedimento");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.Property<string>("Tempo")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tempo");

                    b.Property<string>("TempoMedio")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tempo_medio");

                    b.Property<string>("TempoRapido")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tempo_rapido");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("Setor");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.SubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("SubCategoria");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int")
                        .HasColumnName("ambiente_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("dateTime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(200)")
                        .HasColumnName("senha");

                    b.Property<string>("Token")
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.HasIndex("AmbienteId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Agenda", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.CanalComunicacao", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Categoria", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Chamado", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mgptechRestAPI.Domain.Entities.User", "UserFinish")
                        .WithMany()
                        .HasForeignKey("UserFinishId");

                    b.Navigation("Ambiente");

                    b.Navigation("UserFinish");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Cliente", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Filial", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Pendencia", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mgptechRestAPI.Domain.Entities.Chamado", "Chamado")
                        .WithMany("Pendencias")
                        .HasForeignKey("ChamadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mgptechRestAPI.Domain.Entities.User", "UserFinish")
                        .WithMany()
                        .HasForeignKey("UserFinishId");

                    b.Navigation("Ambiente");

                    b.Navigation("Chamado");

                    b.Navigation("UserFinish");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Procedimento", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Role", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany("Roles")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Setor", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.SubCategoria", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany()
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mgptechRestAPI.Domain.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.User", b =>
                {
                    b.HasOne("mgptechRestAPI.Domain.Entities.Ambiente", "Ambiente")
                        .WithMany("Users")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Ambiente", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("mgptechRestAPI.Domain.Entities.Chamado", b =>
                {
                    b.Navigation("Pendencias");
                });
#pragma warning restore 612, 618
        }
    }
}
